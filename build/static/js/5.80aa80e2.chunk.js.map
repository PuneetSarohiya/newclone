{"version":3,"sources":["Components/Movies/MovieDetails/Cast/i2.webp","Components/Movies/MovieDetails/Cast/Cast.js","Components/Movies/MovieDetails/Crew/Crew.js","Components/Movies/MovieDetails/Similar/Similar.js","Components/Movies/MovieDetails/MovieDetails.js"],"names":["Cast","credits","cast","length","className","slice","map","credit","src","profile_path","img_api","poster","BackupImage","alt","name","original_name","character","id","Fragment","Crew","crew","job","Similar","similar","movie","to","onClick","window","scrollTo","poster_path","title","MovieDetails","match","useState","setMovie","setCredits","setSimilar","isOpen","setOpen","trailer","setTrailer","useEffect","a","instance","get","params","catch","err","console","log","response","refinedSimilarMovies","data","results","filter","undefined","finalTrailer","videos","type","fetchMovie","genres","style","backgroundRepeat","backgroundPosition","backgroundSize","objectFit","backgroundImage","backdrop","backdrop_path","posterBig","release_date","substring","Math","floor","random","runtime","m","i","overview","channel","autoplay","videoId","key","onClose"],"mappings":"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","file":"static/js/5.80aa80e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/i2.239f9100.webp\";","import React from \"react\";\nimport { img_api } from \"../../../../Api/axios\";\nimport \"./Credits.css\";\nimport BackupImage from \"../Cast/i2.webp\";\n// import { useHorizontalScroll } from \"../../useHorizontalScroll\";\n\nfunction Cast(credits) {\n  // const scrollRef = useHorizontalScroll();\n\n  return credits.cast.length !== 0 ? (\n    <div className=\"movieDetails__credits\">\n      <h2 className=\"movieDetails__credits__title\">Cast</h2>\n      <div\n        className=\"movieDetails__credits__profile\"\n        //ref={scrollRef}\n      >\n        {credits.cast &&\n          credits.cast.slice(0, 9).map((credit) => {\n            return (\n              <div className=\"movieDetails__credits__card\" key={credit.id}>\n                {\" \"}\n                {/*maps over cast array and renders first 4 actors*/}\n                <img\n                  className=\"movieDetails__credits__images\"\n                  src={\n                    credit?.profile_path\n                      ? img_api.poster + credit?.profile_path\n                      : BackupImage\n                  }\n                  alt={credit?.name}\n                />\n                <div className=\"movieDetails__credits__text\">\n                  <p className=\"movieDetails__credits__name\">\n                    {credit?.name || credit?.original_name}\n                  </p>\n                  <p>{credit?.character}</p>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  ) : (\n    <React.Fragment></React.Fragment>\n  );\n}\n\nexport default Cast;\n","import React from \"react\";\nimport { img_api } from \"../../../../Api/axios\";\nimport \"../Cast/Credits.css\";\nimport BackupImage from \"../Cast/i2.webp\";\n// import { useHorizontalScroll } from \"../../useHorizontalScroll\";\n\nfunction Crew(credits) {\n  // const scrollRef = useHorizontalScroll();\n\n  return credits.crew.length !== 0 ? (\n    <div className=\"movieDetails__credits movieDetails__creditsCrew\">\n      <h2 className=\"movieDetails__credits__title\">Crew</h2>\n      <div\n        className=\"movieDetails__credits__profile\"\n        // ref={scrollRef}\n      >\n        {credits.crew &&\n          credits.crew.slice(0, 9).map((credit) => {\n            return (\n              <div className=\"movieDetails__credits__card\" key={credit.id}>\n                {/*maps over credits array and renders first 4 actors*/}\n                <img\n                  className=\"movieDetails__credits__images\"\n                  src={\n                    credit?.profile_path\n                      ? img_api.poster + credit?.profile_path\n                      : BackupImage\n                  }\n                  alt={credit?.name}\n                />\n                <div className=\"movieDetails__credits__text\">\n                  <p className=\"movieDetails__credits__name\">\n                    {credit?.name || credit?.original_name}\n                  </p>\n                  <p>{credit?.job}</p>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  ) : (\n    <div></div>\n  );\n}\n\nexport default Crew;\n","import React from \"react\";\nimport { img_api } from \"../../../../Api/axios\";\nimport \"./Similar.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Similar(similar) {\n  return similar.similar.length !== 0 ? (\n    <div className=\"movieDetails__similar\">\n      <h2 className=\"movieDetails__similar__title\">More Like This</h2>\n      <div className=\"movieDetails__similar__profile\">\n        {similar.similar &&\n          similar.similar.map((movie) => {\n            return (\n              <div key={movie.id} className=\"movieDetails__similar__card\">\n                <Link to={`/movie/${movie.id}`}>\n                  <img\n                    onClick={window.scrollTo(0, 0)}\n                    className=\"movieDetails__similar__images\"\n                    src={img_api.poster + movie?.poster_path}\n                    alt={movie.title}\n                  />\n                </Link>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  ) : (\n    <React.Fragment></React.Fragment>\n  );\n}\n\nexport default Similar;\n","import React, { useState, useEffect } from \"react\";\nimport { instance, img_api } from \"../../../Api/axios\";\nimport \"./MovieDetails.css\";\nimport Cast from \"./Cast/Cast\";\nimport Crew from \"./Crew/Crew\";\nimport Similar from \"./Similar/Similar\";\n\nimport \"../../../../node_modules/react-modal-video/css/modal-video.min.css\";\nimport ModalVideo from \"react-modal-video\";\n\nfunction MovieDetails({ match }) {\n  const [movie, setMovie] = useState([]);\n  const [credits, setCredits] = useState([]);\n  const [similar, setSimilar] = useState([]);\n\n  const [isOpen, setOpen] = useState(false);\n  const [trailer, setTrailer] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const response = await instance\n        .get(\n          `/movie/${match.params.id}?&append_to_response=videos,similar,credits`\n        )\n        .catch((err) => {\n          console.log(\"MovieDetails Error\", err.response);\n        });\n\n      // refinedSimilarMovies removes all the movie objects with broken image files\n      // and slices the array to render 10 working movie objects\n      const refinedSimilarMovies = response.data.similar.results\n        .filter((movie) => {\n          return movie?.poster_path !== null || \"\" || undefined;\n        })\n        .slice(0, 4);\n\n      // const filteredTrailerArray = response.data.videos.results.filter(m=>{\n      //     return m !== []\n      // })\n\n      const finalTrailer = response.data.videos.results\n        .filter((movie) => {\n          return movie?.type === \"Trailer\";\n        })\n        .slice(0, 1);\n\n      setMovie(response.data);\n      setCredits(response.data.credits);\n      setSimilar(refinedSimilarMovies);\n      setTrailer(finalTrailer);\n\n      return response;\n    };\n\n    fetchMovie();\n  }, [match.params.id]);\n\n  //prevents from rendering empty arrays and giving errors.\n  if (!movie.genres || !credits.cast || !credits.crew) return null;\n\n  return (\n    <div className=\"movieDetails\">\n      <div\n        className=\"movieDetails__backdrop\"\n        style={{\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"top center\",\n          backgroundSize: \"cover\",\n          objectFit: \"contain\",\n          backgroundImage: `linear-gradient(0deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.1) 100%), url(${img_api.backdrop}${movie?.backdrop_path})`,\n\n        }}\n      >\n        <div className=\"movieDetails__main\">\n          <div className=\"movieDetails__info\">\n            <div>\n              <img\n                className=\"movieDetails__mainPoster\"\n                src={img_api.posterBig + movie?.poster_path}\n                alt={movie?.title}\n              />\n            </div>\n            <div className=\"movieDetails__mainInfo\">\n              <h1 className=\"movieDetails__title\">\n                {movie?.title || movie?.original_name || movie?.name}{\" \"}\n                <span>({movie.release_date.substring(0, 4)})</span>\n              </h1>\n              {credits.crew &&\n                credits.crew\n                  .filter((credit) => credit.job === \"Director\")\n                  .slice(0, 1)\n                  .map((credit) => (\n                    <p\n                      className=\"movieDetails__director\"\n                      key={credit.id * Math.floor(Math.random() * 100)}\n                    >\n                      Directed by{\" \"}\n                      <span className=\"movieDetails__director__span\">\n                        {credit.original_name}\n                      </span>{\" \"}\n                    </p>\n                  ))}{\" \"}\n              {/*filter over the crew array to find the director and then render it*/}\n              {movie.runtime !== 0 ? (\n                <p className=\"movieDetails__runtime\">\n                  {Math.floor(movie.runtime / 60)}h {movie.runtime % 60}m{\" \"}\n                </p>\n              ) : (\n                <p></p>\n              )}{\" \"}\n              {/*conditional rendering doesn't render 0 min. Runtime is converted mins to hr min*/}\n              <div className=\"movieDetails__genres\">\n                {movie.genres.slice(0, 3).map((m, i) => {\n                  return (\n                    <p\n                      key={m.id * Math.floor(Math.random() * 100)}\n                      className=\"movieDetails__genre\"\n                    >\n                      {i ? \"| \" : \"\"}\n                      {m.name}\n                    </p>\n                  );\n                })}\n              </div>\n              <div className=\"movieDetails__buttonDiv\">\n                <button\n                  className=\"trailer__button movieDetails__button\"\n                  onClick={() => setOpen(true)}\n                >\n                  Play Trailer\n                </button>\n              </div>\n              <div>\n                <p className=\"movieDetails__overview\">{movie.overview}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"movieDetails__trailer\">\n        {trailer.length !== 0 ? (\n          <ModalVideo\n            channel=\"youtube\"\n            autoplay\n            isOpen={isOpen}\n            videoId={trailer[0].key}\n            onClose={() => setOpen(false)}\n          />\n        ) : (\n          <div></div>\n        )}\n      </div>\n\n      <div className=\"movieDetails__cast\">\n        <Cast {...credits} />\n      </div>\n\n      <div className=\"movieDetails__cast\">\n        <Crew {...credits} />\n      </div>\n\n      <div className=\"movieDetails__similar\">\n        <Similar similar={similar} />\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"sourceRoot":""}